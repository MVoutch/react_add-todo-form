{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","toString","cn","TodoList","todos","map","App","users","usersFromServer","useState","chooseUserId","setChooseUserId","setTitle","userError","setUserError","titleError","setTitleError","todosFromServer","setTodos","findUser","find","todoList","onSubmit","event","preventDefault","newTodo","Math","max","x","prev","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b087c62b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { TodoUser } from '../../types/ToDoInfo';\n\ntype Props = {\n  todo: TodoUser\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id.toString()}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoUser } from '../../types/ToDoInfo';\n\ntype Props = {\n  todos: TodoUser[],\n};\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoUser } from './types/ToDoInfo';\n\nexport const App = () => {\n  const users = [...usersFromServer];\n\n  const [chooseUserId, setChooseUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const [todos, setTodos] = useState([...todosFromServer]);\n\n  function findUser(userId: number) {\n    return usersFromServer.find((user) => user.id === userId) || null;\n  }\n\n  const todoList = todos.map(todo => ({\n    ...todo,\n    user: findUser(todo.userId),\n  }));\n\n  const clear = () => {\n    setChooseUserId(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(chooseUserId === 0);\n\n    if (title && chooseUserId > 0) {\n      const nextId = Math.max(...todos.map(x => x.id)) + 1;\n\n      const newTodo: TodoUser = {\n        id: nextId,\n        title,\n        completed: false,\n        userId: chooseUserId,\n        user: findUser(chooseUserId),\n      };\n\n      setTodos(prev => [...prev, newTodo]);\n\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Text\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(!event.target.value);\n            }}\n          />\n\n          {titleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={chooseUserId}\n            placeholder=\"Email\"\n            onChange={(event) => {\n              setChooseUserId(+event.target.value);\n              setUserError(+event.target.value === 0);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map((user) => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}